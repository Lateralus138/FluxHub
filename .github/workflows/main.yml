name: Main Workflow
on:
  push:
    branches: [ master ]
env:
  TIME_STAMP:
  VERSION_DATE:
  VERSION_PROGRAM: 1
  VERSION_FILE: 0
  VERSION_EPOCH:
  VERSION_FULL:
jobs:
  main_workflow:
    name: Main Workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - id: check_and_create_main_start_md5
        name: Check and Create Main Start MD5
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "00aedb",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/workflow_init_md5.json" ]]; then
            touch docs/json/workflow_init_md5.json
          fi
          echo -e "$workflow_init_template" > docs/json/workflow_init_md5.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Workflow Start\"/g" docs/json/workflow_init_md5.json
          sed -i "s/\"message\": \".*\"/\"message\": \"$(date)\"/g" docs/json/workflow_init_md5.json
      - id: check_and_create_directories
        name: Check and Create Directories
        if: steps.check_and_create_main_start_md5.conclusion == 'success'
        run: |
          if ! [[ -d "docs/json" ]]; then
            mkdir -p docs/json
          fi
      - id: check_current_shell
        name: Check Current Shell
        if: steps.check_and_create_directories.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "00a300",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/current_shell.json" ]]; then
            touch docs/json/current_shell.json
          fi
          rpath="$0"
          rpath="${rpath//\//\\/}"
          echo -e "$workflow_init_template" > docs/json/current_shell.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Runner Script\"/g" docs/json/current_shell.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/current_shell.json
      - id: check_os_version
        name: Check OS Version
        if: steps.check_current_shell.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "9f00a7",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/os_version.json" ]]; then
            touch docs/json/os_version.json
          fi
          rpath="$(uname -a)"
          rpath="${rpath//\//\\/}"
          echo -e "$workflow_init_template" > docs/json/os_version.json
          sed -i "s/\"label\": \".*\"/\"label\": \"OS Version\"/g" docs/json/os_version.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/os_version.json
      - id: check_lsb_version
        name: Check LSB Version
        if: steps.check_os_version.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "e3a21a",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/lsb_version.json" ]]; then
            touch docs/json/lsb_version.json
          fi
          rpath="$(lsb_release -sd)"
          rpath="${rpath//\//\\/}"
          echo -e "$workflow_init_template" > docs/json/lsb_version.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Workflow Built On\"/g" docs/json/lsb_version.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/lsb_version.json
      - id: check_shell
        name: Check Shell
        if: steps.check_lsb_version.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "b91d47",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/shell.json" ]]; then
            touch docs/json/shell.json
          fi
          rpath="$0"
          rpath="${rpath//\//\\/}"
          rpath="${rpath//\-/\\-}"
          echo -e "$workflow_init_template" > docs/json/shell.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Workflow Shell\"/g" docs/json/shell.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/shell.json
      - id: check_user
        name: Check User
        if: steps.check_shell.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "2b5797",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/user.json" ]]; then
            touch docs/json/user.json
          fi
          rpath="$USER"
          rpath="${rpath//\//\\/}"
          rpath="${rpath//\-/\\-}"
          echo -e "$workflow_init_template" > docs/json/user.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Workflow User\"/g" docs/json/user.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/user.json
      - id: check_temperature
        name: Check Temperature
        if: steps.check_user.conclusion == 'success'
        run: |
          sudo apt install jq -y
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "00aba9",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/temperature.json" ]]; then
            touch docs/json/temperature.json
          fi
          wget https://api.weather.gov/gridpoints/ILX/71,58/forecast/hourly -O temperature.json
          a="$(cat temperature.json | jq -r .properties.periods[0].temperature)"
          b="$(cat temperature.json | jq -r .properties.periods[0].temperatureUnit)"
          rm temperature.json
          rpath="${a}${b}"
          rpath="${rpath//\//\\/}"
          rpath="${rpath//\-/\\-}"
          echo -e "$workflow_init_template" > docs/json/temperature.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Decatur, IL Temperature\"/g" docs/json/temperature.json
          sed -i "s/\"message\": \".*\"/\"message\": \"${rpath}\"/g" docs/json/temperature.json
      - id: check_and_create_main_stop_md5
        name: Check and Create Main Stop MD5
        if: steps.check_temperature.conclusion == 'success'
        run: |
          workflow_init_template='{\n\t"schemaVersion": 1,\n\t"color": "00aedb",\n\t"label": "PLACEHOLDER",\n\t"message": "PLACEHOLDER",\n\t"labelColor": "1d1d1d",\n\t"style": "for-the-badge",\n\t"namedLogo": "github"\n}'
          if ! [[ -f "docs/json/workflow_stop_md5.json" ]]; then
            touch docs/json/workflow_stop_md5.json
          fi
          echo -e "$workflow_init_template" > docs/json/workflow_stop_md5.json
          sed -i "s/\"label\": \".*\"/\"label\": \"Workflow  Stop\"/g" docs/json/workflow_stop_md5.json
          sed -i "s/\"message\": \".*\"/\"message\": \"$(date)\"/g" docs/json/workflow_stop_md5.json
          echo "VERSION_EPOCH=$(date +%s)" >> $GITHUB_ENV
          export epoch="${{ env.VERSION_EPOCH }}";echo "TIME_STAMP=$(date -ud @${epoch})" >> $GITHUB_ENV
          echo "VERSION_FULL=${{ env.VERSION_PROGRAM }}.${{ env.VERSION_FILE }}.${{ env.VERSION_EPOCH }}" >> $GITHUB_ENV
      - id: check_and_commit
        name: Commit Changes
        if: steps.check_and_create_main_stop_md5.conclusion == 'success'
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Completed Main Workflow - ${{ env.VERSION_FULL }} @ ${{ env.TIME_STAMP }}